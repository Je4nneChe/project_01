
# ТЕМА: МОДУЛЬ Импорт
# модуль app.py - стартовый запуск скриптов
# Импорт имен
## Терминология
# Модуль - файл, который в котором мы работаем. Рассматривается, как отдельный самомтоятельный объект в PYTHON.
# Пакет - папка с модулями, содержащая файл __init__
# Библиотека - набор пакетов и модулей, например, Python Standart Library
#
# Фреймворк - потом!

# https://github.com/yandex/YaLM-100B - обучение Алисы, для рассмотрения
# все мозги этой модели здесь: https://github.com/yandex/YaLM-100B/tree/main/megatron_lm/megatron
# в megatron_lm/megatron/global_vars.py видим 
# МОДУЛЬ -Это отделþнýй файл, определения и выражения, внутри которого, можно 
# использовать в других файлах. Позволяет разбивать программу на небольшие логические элементы. 
#
# используем файл functions.py для стягивания модулей

# кажд функция, модуль и Python это одель пространство

# Импорт имен
# 1 способ просто импорт модуля
# практический пример: os, import sys
import functions
# print(functions.sum_all(100, 20, 300))

# 2 способ импорт с синонимом
# практический пример: import as pd, import numpy as np 
import functions as f
# print(f.sum_all(100, 20, 300))

# 3 способ, если нужна только одна функция из др файла
# практический пример: from flask import flask
# импорт конкретного имени (осторожно, можно перекрыть(затенить) имя - если перед print будет другое значение)
from functions import sum_all
# print(sum_all(100, 20, 300))

# # импорт из пакетов
# # 1 просто импорт из пакетов
# import my_package.module_2

# my_package.module_2.foo_2()


# 2 импорт с синонимом
# практический пример: import matplotlib.pyplot as plt
import my_package.module_2 as m2

m2.foo_2()

# 3 импорт напрямую из пакета
import my_package.subpackage as sp 

sp.foo_3




# что такое _name_?
# print(__name__)
# print(f.__name__)
# если модуль называется __main__, то он является исполняемым

# запуск скрипта по имени модуля
if __name__=='__main__':
    print('Запуск скрипта')
    print(f.get_topmgrs({'Sam':100000, 'Paul':50000}))
    print(sum_all(100, 20, 300))




# Структура модуля
# 1 импорты (import os)
# 2 константы (PATH='C:\Users\') - лучше без них
# 3 функция (def func(par):)
# 4 классы (class Person:)
# 5 тело цикла-условия (код) при необходимости
# 6 запуск, если это запускаемый модуль

# переменных в модуле лучше не объявлять.
# переменные свойства фиксируются в классах

import sqlite3
connection = sqlite3.connect('teachers.db')
cursor = connection.cursor()
sqlquery = """INSERT INTO Teacher (Teacher_Id, Teacher_Name, School_Id,
Joining_Date, Speciality, Salary, Experience)
VALUES
('101', 'Галина', '1', '2021-2-10', 'Физик', '40000', NULL),
('102', 'Мария', '1', '2018-07-23', 'Химик', '20000', NULL),
('103', 'Ольга', '2', '2022-05-19', 'Информатик', '25000', NULL),
('104', 'Полина', '2', '2017-12-28', 'Физик ', '28000', NULL),
('105', 'Лидия', '3', '2015-06-04', 'Информатик', '42000', NULL),
('106', 'Анастасия', '3', '2019-09-11', 'Учитель трудов', '30000', NULL),
('107', 'Ирина', '4', '2020-08-21', 'Информатик', '32000', NULL),
('108', 'Виктория', '4', '2017-10-17', 'Географ', '30000', NULL);"""
cursor.connection(sqlquery)
connection.commit()
connection.close()


