# -*- coding: utf-8 -*-
"""18_09_2023_6potok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uPnSfbY0QIOxLZQH_0wtoYS0KOdX2hTn
"""

import pandas as pd
import sqlite3


def write_df(id, df2):
  write = df2.to_sql(f'product_{id}',con,index = False, if_exists='append')

con = sqlite3.connect('products.db')
# Считываем 2 файла name и id
name = pd.read_excel('name.xlsx',sheet_name='Sheet1')
id = pd.read_excel('id.xlsx',sheet_name='Sheet1')
# Объединяем датафрейм name и id
df = name.merge(id,left_on='rosstat_id', right_on='rosstat_id')
df = df.drop(['year','rosstat_weight','city_code'], axis = 1)
# Беру 5 строк из ДФ name
dfname = name.head(5)
print (dfname)

for index, row in dfname.iterrows():
  id = row['rosstat_id']
  print(id)
  df2 = df[df['rosstat_id'] == id]
  write_df(id,df2)

# Подключение
import pandas as pd
import requests

token = '***'
link = '***'

request = f'{link}/rtpi_rosstat_weight?select=*'

myheaders = {'Authorization': f'Bearer {token}',
             'Content-Type': 'application/json',
             'Range-Unit': 'items'}

response = requests.get(request,headers=myheaders)

response.json()

df = pd.DataFrame(response.json())
df.to_excel('testdata.xlsx', index = False)

!pip install telebot

import telebot

bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')

@bot.message_handler(commands=['start'])
def start(message):
  bot.send_message(message.chat.id,'Привет, мир!!!')

@bot.message_handler(commands=['help'])
def help(message):
  bot.send_message(message.chat.id,'Список доступных команд отображен в кнопке menu')

@bot.message_handler()
def randomtext(message):
  bot.send_message(message.chat.id,'извините я вас не понимаю, воспользуйтесь командой /help')

bot.polling(none_stop=True)

import telebot

bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')

@bot.message_handler(commands=['start'])
def start(message):
  bot.send_message(message.chat.id,message)

bot.polling(none_stop=True)

import telebot
bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')
@bot.message_handler(content_types=['document','text','photo'])
def define(message):
  if message.photo:
    mes1 = 'Это фото'
    bot.send_message(message.chat.id, mes1)
  elif message.text:
    mes2 = 'Это текст'
    bot.send_message(message.chat.id, mes2)
  elif message.document:
    mes3 = 'Это документ'
    bot.send_message(message.chat.id, mes3)

bot.polling(none_stop=True)

import telebot
bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')

@bot.message_handler(commands=['start'])
def start(message):
  png = open('123.jpg', 'rb')
  bot.send_photo(message.chat.id, png)

bot.polling(none_stop=True)

# Кнопки вложенные в сообщения
import telebot
from telebot import types

bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')

@bot.message_handler(commands=['start'])
def start(message):
  markup = types.InlineKeyboardMarkup()
  btn1 = types.InlineKeyboardButton('Тест 1', url='https://ya.ru/')
  markup.row(btn1)
  btn2 = types.InlineKeyboardButton('Тест 2', url='https://ya.ru/')
  btn3 = types.InlineKeyboardButton('Тест 3', url='https://ya.ru/')
  markup.row(btn2,btn3)
  btn4 = types.InlineKeyboardButton('Тест 4', callback_data='test4')
  markup.row(btn4)
  bot.send_message(message.chat.id,'Привет, мир!!!',reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
  if callback.data == 'test4':
    bot.send_message(callback.message.chat.id, 'Кнопка 4 отработала')

bot.polling(none_stop=True)

# Кнопки вложенные в чат
import telebot
from telebot import types

bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')

@bot.message_handler(commands=['start'])
def start(message):
  markup = types.ReplyKeyboardMarkup()
  btn1 = types.KeyboardButton('Тест1')
  btn2 = types.KeyboardButton('Тест2')
  markup.row(btn1,btn2)
  btn3 = types.KeyboardButton('Тест3')
  btn4 = types.KeyboardButton('Тест4')
  markup.row(btn3,btn4)
  bot.send_message(message.chat.id,'Привет, мир!!!',reply_markup=markup)
  bot.register_next_step_handler(message,click)

def click(message):
  if message.text == 'Тест1':
    bot.send_message(message.chat.id,'кнопка тест1 отработала')



bot.polling(none_stop=True)

# Задача 2 Бот Регистратор
import telebot
import sqlite3
import pandas as pd

name = None
surname = None
data = None
org = None

bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')
@bot.message_handler(commands=['register'])
def register(message):
  bot.send_message(message.chat.id,'Привет, я бот регистратор')
  bot.send_message(message.chat.id,'Введи свое имя')
  bot.register_next_step_handler(message,func_name)

def func_name(message):
  global name
  name = message.text
  bot.send_message(message.chat.id,'Введи свою фамилию')
  bot.register_next_step_handler(message,func_surname)

def func_surname(message):
  global surname
  surname = message.text
  bot.send_message(message.chat.id,'Введи свою дату')
  bot.register_next_step_handler(message,func_data)

def func_data(message):
  global data
  data = message.text
  bot.send_message(message.chat.id,'Введи свою организацию')
  bot.register_next_step_handler(message,func_org)

def func_org(message):
  global org
  org = message.text
  insertionbd = insertion(name,surname,data,org)
  bot.send_message(message.chat.id,'Вы успешно зарегестрированы')

def insertion(name,surname,data,org):
  con = sqlite3.connect('event.db')
  cur = con.cursor()
  createtable = """CREATE TABLE IF NOT EXISTS persons(
    Name TEXT,
    Surname TEXT,
    Data TEXT,
    Organization TEXT);"""
  cur.execute(createtable)
  con.commit()
  insquery = f"""INSERT INTO persons (Name,Surname,Data,Organization)
  VALUES
  ('{name}','{surname}','{data}','{org}');"""
  cur.execute(insquery)
  con.commit()
  con.close()


@bot.message_handler(commands=['report'])
def register(message):
  bot.send_message(message.chat.id,'Отчет выгружается, ожидайте...')
  con = sqlite3.connect('event.db')
  query = 'SELECT * FROM persons'
  df = pd.read_sql(query,con)
  df.to_excel('spisok.xlsx',index = False)
  doc = open('spisok.xlsx', 'rb')
  bot.send_document(message.chat.id,doc)
  bot.send_message(message.chat.id,'Получай список')

bot.polling(none_stop=True)

import telebot
import sqlite3
import pandas as pd

name = None
surname = None
id = None
data = None
org = None

bot = telebot.TeleBot('6424012378:AAFCepUHixPpv3Cd80vSrSfW_S4_FNyVDY8')
@bot.message_handler(commands=['register'])
def register(message):
  bot.send_message(message.chat.id,'Привет, я бот регистратор')
  bot.send_message(message.chat.id,'Введи свое имя')
  bot.register_next_step_handler(message,func_name)

def func_name(message):
  global name
  name = message.text
  bot.send_message(message.chat.id,'Введи свою фамилию')
  bot.register_next_step_handler(message,func_surname)

def func_surname(message):
  global surname
  surname = message.text
  bot.send_message(message.chat.id,'Введи свою дату')
  bot.register_next_step_handler(message,func_data)

def func_data(message):
  global data
  data = message.text
  bot.send_message(message.chat.id,'Введи свою организацию')
  bot.register_next_step_handler(message,func_org)

def func_org(message):
  global org, id
  id = message.from_user.id
  print(id)
  org = message.text
  insertionbd = insertion(id,name,surname,data,org)
  bot.send_message(message.chat.id,'Вы успешно зарегестрированы')
  bot.send_message(message.chat.id,'Проверить статус регистрации можно с помощью команды /status')

def insertion(id,name,surname,data,org):
  con = sqlite3.connect('event2.db')
  cur = con.cursor()
  createtable = """CREATE TABLE IF NOT EXISTS persons(
    ID INTEGER,
    Name TEXT,
    Surname TEXT,
    Data TEXT,
    Organization TEXT);"""
  cur.execute(createtable)
  con.commit()
  insquery = f"""INSERT INTO persons (ID,Name,Surname,Data,Organization)
  VALUES
  ({id},'{name}','{surname}','{data}','{org}');"""
  cur.execute(insquery)
  con.commit()

@bot.message_handler(commands=['status'])
def status(message):
  id = message.from_user.id
  con = sqlite3.connect('event2.db')
  cur = con.cursor()
  query = f"SELECT ID FROM persons WHERE ID = {id}"
  cur.execute(query)
  result = cur.fetchone()
  print(result[0])
  if result[0] == id:
    bot.send_message(message.chat.id,'Вы уже зарегистрированы на меропритие')
  else:
    bot.send_message(message.chat.id,'Пожалуйста, зарегистрируйтесь с помощью команды /register')



bot.polling(none_stop=True)